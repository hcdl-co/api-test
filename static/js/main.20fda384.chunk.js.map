{"version":3,"sources":["App.js","reportWebVitals.js","index.js","logo.svg"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_useState","useState","_useState2","slicedToArray","providerArray","setProviderArray","_useState3","_useState4","locationURLs","getLocationURLs","_useState5","_useState6","providerSpecialtyList","setProviderSpecialtyList","_useState7","_useState8","totalFound","getTotalFound","_React$useState","React","_React$useState2","buttonClicked","setButtonClicked","nameRef","useRef","cityRef","stateRef","postalRef","showAddress","e","location","target","_ref2","asyncToGenerator","_callee2","locationLink","response","json","_context2","concat","fetch","innerHTML","t0","console","log","apply","arguments","fetchLocation","react_default","a","createElement","className","src","logo","alt","placeholder","ref","id","onClick","current","city","postalCode","searchCriteria","query","url","_ref","_callee","locURLArray","specialtyArray","_context","total","provider","resource","reference","specialty","text","fetchData","getDatData","map","index","fullUrl","telecom","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","module","p"],"mappings":"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","file":"static/js/main.20fda384.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n  const [providerArray, setProviderArray] = useState([]);\n\n  const [locationURLs, getLocationURLs] = useState([])\n  const [providerSpecialtyList, setProviderSpecialtyList] = useState([]);\n  const [totalFound, getTotalFound] = useState(0);\n  const [buttonClicked, setButtonClicked] = React.useState(false)\n  const nameRef = useRef();\n  const cityRef = useRef();\n  const stateRef = useRef();\n  const postalRef = useRef();\n\n  function sortCriteria() {\n\n    let name = nameRef.current.value;\n    let city = cityRef.current.value;\n    let state = stateRef.current.value;\n    let postalCode = postalRef.current.value;\n    let searchCriteria = ''\n    let nameCriteria = '&name=' + name\n    let cityCriteria = '&location.address-city=' + city\n    let stateCriteria = '&location.address-state=' + state\n    let postalCriteria = '&location.address-postalcode=' + postalCode\n\n\n    if (name !== '') {\n      searchCriteria = searchCriteria + nameCriteria\n    }\n\n    if (city !== '') {\n      searchCriteria = searchCriteria + cityCriteria\n    }\n\n    if (state !== '') {\n      searchCriteria = searchCriteria + stateCriteria\n    }\n    if (postalCode !== '') {\n      searchCriteria = searchCriteria + postalCriteria\n    }\n\n    getDatData(searchCriteria)\n\n\n  }\n// this function gets the data from the api and then sorts it out into an array\n  function getDatData(query) {\n    setButtonClicked(true)\n\n    let url = `https://public.fhir.flex.optum.com/R4/HealthcareService?service-category=prov&${query}`;\n    const fetchData = async () => {\n      try {\n        // initial response\n        const response = await fetch(url);\n        const json = await response.json();\n        // get the number of search results and the results and save them as states\n        getTotalFound(json.total);\n        setProviderArray(json.entry);\n\n        // this gets the location reference numbers for all the providers \n        let locURLArray = [];\n        json.entry.forEach(provider => locURLArray.push(provider.resource.location[0].reference))\n        getLocationURLs(locURLArray);\n        // gets the specialty data if it exists\n        let specialtyArray = [];\n        json.entry.forEach(provider => {\n\n          if (provider.resource.specialty) {\n            specialtyArray.push(provider.resource.specialty[0].text)\n          } else {\n            specialtyArray.push('Not Available')\n          }\n          setProviderSpecialtyList(specialtyArray);\n        })\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    fetchData();\n\n  }\n\n\n\n// when someone clicks the \"show address\" button this query will take the location reference and query it separately\n  function showAddress(e) {\n    //we use the index number of the main provider search to get the location - having set it to the value of the output\n    let location = locationURLs[e.target.value];\n\n    const fetchLocation = async () => {\n      try {\n\n        let locationLink = `https://public.fhir.flex.optum.com/R4/${location}`;\n        const response = await fetch(locationLink);\n        const json = await response.json();\n        //we don't want to get the location data if it didn't get anything so we wrapped it in an if statement\n        if (locationURLs === []) {\n          getLocationURLs(json.name)\n        }\n        //change the button to display the address\n        e.target.innerHTML = json.name\n\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchLocation();\n\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>United Healthcare Providers</h1>\n        <p>brought to you by healthcare Download. Get in control, stay in control.</p></header>\n\n      <input\n        name=\"name\"\n        placeholder=\"search by last name\"\n        ref={nameRef}\n        id=\"searchInput\"\n      />\n      <input\n        name=\"city\"\n        placeholder=\"search by city\"\n        ref={cityRef}\n        id=\"searchInput\"\n      />\n      <input\n        name=\"state\"\n        placeholder=\"search by state\"\n        ref={stateRef}\n        id=\"searchInput\"\n      />\n      <input\n        name=\"search\"\n        placeholder=\"search by postal code\"\n        ref={postalRef}\n        id=\"searchInput\"\n      />\n\n      <button onClick={sortCriteria}>Find A Doctor</button>\n      {totalFound === 0 && buttonClicked ? (\n        <p>We didn't find anything that matched that search criteria</p>\n      ) : null}\n      {totalFound > 10 ? (<p>We found {totalFound} results matching that criteria, consider refining your search. Showing <a>10</a> results.</p>) : null}\n      {providerArray !== undefined && providerArray.length ? (\n\n        <table>\n          <thead>\n            <tr>\n              <th>NAME</th>\n              <th>SPECIALTY</th>\n              <th>PHONE</th>\n              <th>ADDRESS</th>\n            </tr>\n          </thead>\n\n          {providerArray.map((provider, index) => {\n\n            return (\n              <tbody key={provider.fullUrl}>\n                <tr>\n\n                  <td key={provider.resource.name}>{provider.resource.name}</td>\n                  <td key={providerSpecialtyList[index]}>{providerSpecialtyList[index]}</td>\n                  <td key={provider.resource.telecom[0].value}>{provider.resource.telecom[0].value}</td>\n                  <td><button key={index} value={index} onClick={showAddress}>Show Address</button></td>\n                </tr>\n\n              </tbody>\n\n            )\n          })\n          }\n\n        </table>\n      ) : null}\n \n      {providerArray === undefined ? (\n        <div>\n          <p>Sorry, your search did not work, please try again or notify our team  at info@healthcareDL.com</p>\n        </div>\n      ) : null}\n\n    </div>\n\n\n  )\n\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a93d12d3.svg\";"],"sourceRoot":""}